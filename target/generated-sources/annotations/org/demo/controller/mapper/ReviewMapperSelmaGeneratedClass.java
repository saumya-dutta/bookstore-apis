// GENERATED BY S3LM4
package org.demo.controller.mapper;


public final class ReviewMapperSelmaGeneratedClass
    implements ReviewMapper {

  @Override
  public final org.demo.controller.resource.ReviewResource map(org.demo.entity.Review inReview) {
    org.demo.controller.resource.ReviewResource out = null;
    if (inReview != null) {
      out = new org.demo.controller.resource.ReviewResource();
      out.setBookId(inReview.getBookId());
      if (inReview.getCreation() != null) {
        out.setCreation(new java.util.Date(inReview.getCreation().getTime()));
      }
      else {
        out.setCreation(null);
      }
      out.setCustomerCode(inReview.getCustomerCode());
      if (inReview.getLastUpdate() != null) {
        out.setLastUpdate(new java.util.Date(inReview.getLastUpdate().getTime()));
      }
      else {
        out.setLastUpdate(null);
      }
      out.setReviewNote(inReview.getReviewNote());
      out.setReviewText(inReview.getReviewText());
    }
    return out;
  }


  @Override
  public final org.demo.entity.Review map(org.demo.controller.resource.ReviewResource inReviewResource) {
    org.demo.entity.Review out = null;
    if (inReviewResource != null) {
      out = new org.demo.entity.Review();
      out.setBookId(inReviewResource.getBookId());
      if (inReviewResource.getCreation() != null) {
        out.setCreation(new java.util.Date(inReviewResource.getCreation().getTime()));
      }
      else {
        out.setCreation(null);
      }
      out.setCustomerCode(inReviewResource.getCustomerCode());
      if (inReviewResource.getLastUpdate() != null) {
        out.setLastUpdate(new java.util.Date(inReviewResource.getLastUpdate().getTime()));
      }
      else {
        out.setLastUpdate(null);
      }
      out.setReviewNote(inReviewResource.getReviewNote());
      out.setReviewText(inReviewResource.getReviewText());
    }
    return out;
  }


  @Override
  public final org.demo.entity.Review map(org.demo.controller.resource.ReviewResource inReviewResource, org.demo.entity.Review out) {
    if (inReviewResource != null) {
      if (out == null) {
        out = new org.demo.entity.Review();
      }
      out.setBookId(inReviewResource.getBookId());
      if (inReviewResource.getCreation() != null) {
        out.setCreation(new java.util.Date(inReviewResource.getCreation().getTime()));
      }
      else {
        out.setCreation(null);
      }
      out.setCustomerCode(inReviewResource.getCustomerCode());
      if (inReviewResource.getLastUpdate() != null) {
        out.setLastUpdate(new java.util.Date(inReviewResource.getLastUpdate().getTime()));
      }
      else {
        out.setLastUpdate(null);
      }
      out.setReviewNote(inReviewResource.getReviewNote());
      out.setReviewText(inReviewResource.getReviewText());
    }
    if (fr.xebia.extras.selma.SelmaUtils.areNull(inReviewResource)) {
      out = null;
    }
    return out;
  }


  @Override
  public final java.util.List<org.demo.controller.resource.ReviewResource> map(java.util.List<org.demo.entity.Review> inReview) {
    java.util.List<org.demo.controller.resource.ReviewResource> out = null;
    if (inReview != null) {
      java.util.ArrayList<org.demo.controller.resource.ReviewResource> aoutTmpCollection = new java.util.ArrayList<org.demo.controller.resource.ReviewResource>(inReview.size());
      for (org.demo.entity.Review aoutItem : inReview) {
        aoutTmpCollection.add(map(aoutItem));
      }
      out = aoutTmpCollection;
    }
    return out;
  }



  /**
   * Single constructor
   */
  public ReviewMapperSelmaGeneratedClass() {
  }

}
