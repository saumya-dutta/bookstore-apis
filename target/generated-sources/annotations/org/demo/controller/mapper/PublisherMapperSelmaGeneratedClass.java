// GENERATED BY S3LM4
package org.demo.controller.mapper;


public final class PublisherMapperSelmaGeneratedClass
    implements PublisherMapper {

  @Override
  public final org.demo.controller.resource.PublisherResource map(org.demo.entity.Publisher inPublisher) {
    org.demo.controller.resource.PublisherResource out = null;
    if (inPublisher != null) {
      out = new org.demo.controller.resource.PublisherResource();
      out.setCity(inPublisher.getCity());
      out.setCode(inPublisher.getCode());
      out.setContact(inPublisher.getContact());
      out.setCountryCode(inPublisher.getCountryCode());
      out.setEmail(inPublisher.getEmail());
      out.setName(inPublisher.getName());
      out.setPhone(inPublisher.getPhone());
      out.setZipCode(inPublisher.getZipCode());
    }
    return out;
  }


  @Override
  public final org.demo.entity.Publisher map(org.demo.controller.resource.PublisherResource inPublisherResource) {
    org.demo.entity.Publisher out = null;
    if (inPublisherResource != null) {
      out = new org.demo.entity.Publisher();
      out.setCity(inPublisherResource.getCity());
      out.setCode(inPublisherResource.getCode());
      out.setContact(inPublisherResource.getContact());
      out.setCountryCode(inPublisherResource.getCountryCode());
      out.setEmail(inPublisherResource.getEmail());
      out.setName(inPublisherResource.getName());
      out.setPhone(inPublisherResource.getPhone());
      out.setZipCode(inPublisherResource.getZipCode());
    }
    return out;
  }


  @Override
  public final org.demo.entity.Publisher map(org.demo.controller.resource.PublisherResource inPublisherResource, org.demo.entity.Publisher out) {
    if (inPublisherResource != null) {
      if (out == null) {
        out = new org.demo.entity.Publisher();
      }
      out.setCity(inPublisherResource.getCity());
      out.setCode(inPublisherResource.getCode());
      out.setContact(inPublisherResource.getContact());
      out.setCountryCode(inPublisherResource.getCountryCode());
      out.setEmail(inPublisherResource.getEmail());
      out.setName(inPublisherResource.getName());
      out.setPhone(inPublisherResource.getPhone());
      out.setZipCode(inPublisherResource.getZipCode());
    }
    if (fr.xebia.extras.selma.SelmaUtils.areNull(inPublisherResource)) {
      out = null;
    }
    return out;
  }


  @Override
  public final java.util.List<org.demo.controller.resource.PublisherResource> map(java.util.List<org.demo.entity.Publisher> inPublisher) {
    java.util.List<org.demo.controller.resource.PublisherResource> out = null;
    if (inPublisher != null) {
      java.util.ArrayList<org.demo.controller.resource.PublisherResource> aoutTmpCollection = new java.util.ArrayList<org.demo.controller.resource.PublisherResource>(inPublisher.size());
      for (org.demo.entity.Publisher aoutItem : inPublisher) {
        aoutTmpCollection.add(map(aoutItem));
      }
      out = aoutTmpCollection;
    }
    return out;
  }



  /**
   * Single constructor
   */
  public PublisherMapperSelmaGeneratedClass() {
  }

}
