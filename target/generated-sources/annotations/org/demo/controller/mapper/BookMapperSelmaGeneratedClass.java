// GENERATED BY S3LM4
package org.demo.controller.mapper;


public final class BookMapperSelmaGeneratedClass
    implements BookMapper {

  @Override
  public final org.demo.controller.resource.BookResource map(org.demo.entity.Book inBook) {
    org.demo.controller.resource.BookResource out = null;
    if (inBook != null) {
      out = new org.demo.controller.resource.BookResource();
      out.setAuthorId(inBook.getAuthorId());
      out.setAvailability(inBook.getAvailability());
      out.setBestSeller(inBook.getBestSeller());
      out.setDiscount(inBook.getDiscount());
      out.setIsbn(inBook.getIsbn());
      out.setPrice(inBook.getPrice());
      out.setPublisherId(inBook.getPublisherId());
      out.setQuantity(inBook.getQuantity());
      out.setTitle(inBook.getTitle());
    }
    return out;
  }


  @Override
  public final org.demo.entity.Book map(org.demo.controller.resource.BookResource inBookResource) {
    org.demo.entity.Book out = null;
    if (inBookResource != null) {
      out = new org.demo.entity.Book();
      out.setAuthorId(inBookResource.getAuthorId());
      out.setAvailability(inBookResource.getAvailability());
      out.setBestSeller(inBookResource.getBestSeller());
      out.setDiscount(inBookResource.getDiscount());
      out.setIsbn(inBookResource.getIsbn());
      out.setPrice(inBookResource.getPrice());
      out.setPublisherId(inBookResource.getPublisherId());
      out.setQuantity(inBookResource.getQuantity());
      out.setTitle(inBookResource.getTitle());
    }
    return out;
  }


  @Override
  public final org.demo.entity.Book map(org.demo.controller.resource.BookResource inBookResource, org.demo.entity.Book out) {
    if (inBookResource != null) {
      if (out == null) {
        out = new org.demo.entity.Book();
      }
      out.setAuthorId(inBookResource.getAuthorId());
      out.setAvailability(inBookResource.getAvailability());
      out.setBestSeller(inBookResource.getBestSeller());
      out.setDiscount(inBookResource.getDiscount());
      out.setIsbn(inBookResource.getIsbn());
      out.setPrice(inBookResource.getPrice());
      out.setPublisherId(inBookResource.getPublisherId());
      out.setQuantity(inBookResource.getQuantity());
      out.setTitle(inBookResource.getTitle());
    }
    if (fr.xebia.extras.selma.SelmaUtils.areNull(inBookResource)) {
      out = null;
    }
    return out;
  }


  @Override
  public final java.util.List<org.demo.controller.resource.BookResource> map(java.util.List<org.demo.entity.Book> inBook) {
    java.util.List<org.demo.controller.resource.BookResource> out = null;
    if (inBook != null) {
      java.util.ArrayList<org.demo.controller.resource.BookResource> aoutTmpCollection = new java.util.ArrayList<org.demo.controller.resource.BookResource>(inBook.size());
      for (org.demo.entity.Book aoutItem : inBook) {
        aoutTmpCollection.add(map(aoutItem));
      }
      out = aoutTmpCollection;
    }
    return out;
  }



  /**
   * Single constructor
   */
  public BookMapperSelmaGeneratedClass() {
  }

}
