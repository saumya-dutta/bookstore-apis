// GENERATED BY S3LM4
package org.demo.controller.mapper;


public final class CustomerMapperSelmaGeneratedClass
    implements CustomerMapper {

  @Override
  public final org.demo.controller.resource.CustomerResource map(org.demo.entity.Customer inCustomer) {
    org.demo.controller.resource.CustomerResource out = null;
    if (inCustomer != null) {
      out = new org.demo.controller.resource.CustomerResource();
      out.setAge(inCustomer.getAge());
      out.setCity(inCustomer.getCity());
      out.setCode(inCustomer.getCode());
      out.setCountryCode(inCustomer.getCountryCode());
      out.setFirstName(inCustomer.getFirstName());
      out.setLastName(inCustomer.getLastName());
      out.setLogin(inCustomer.getLogin());
      out.setPassword(inCustomer.getPassword());
      out.setPhone(inCustomer.getPhone());
      out.setReviewer(inCustomer.getReviewer());
      out.setZipCode(inCustomer.getZipCode());
    }
    return out;
  }


  @Override
  public final org.demo.entity.Customer map(org.demo.controller.resource.CustomerResource inCustomerResource) {
    org.demo.entity.Customer out = null;
    if (inCustomerResource != null) {
      out = new org.demo.entity.Customer();
      out.setAge(inCustomerResource.getAge());
      out.setCity(inCustomerResource.getCity());
      out.setCode(inCustomerResource.getCode());
      out.setCountryCode(inCustomerResource.getCountryCode());
      out.setFirstName(inCustomerResource.getFirstName());
      out.setLastName(inCustomerResource.getLastName());
      out.setLogin(inCustomerResource.getLogin());
      out.setPassword(inCustomerResource.getPassword());
      out.setPhone(inCustomerResource.getPhone());
      out.setReviewer(inCustomerResource.getReviewer());
      out.setZipCode(inCustomerResource.getZipCode());
    }
    return out;
  }


  @Override
  public final org.demo.entity.Customer map(org.demo.controller.resource.CustomerResource inCustomerResource, org.demo.entity.Customer out) {
    if (inCustomerResource != null) {
      if (out == null) {
        out = new org.demo.entity.Customer();
      }
      out.setAge(inCustomerResource.getAge());
      out.setCity(inCustomerResource.getCity());
      out.setCode(inCustomerResource.getCode());
      out.setCountryCode(inCustomerResource.getCountryCode());
      out.setFirstName(inCustomerResource.getFirstName());
      out.setLastName(inCustomerResource.getLastName());
      out.setLogin(inCustomerResource.getLogin());
      out.setPassword(inCustomerResource.getPassword());
      out.setPhone(inCustomerResource.getPhone());
      out.setReviewer(inCustomerResource.getReviewer());
      out.setZipCode(inCustomerResource.getZipCode());
    }
    if (fr.xebia.extras.selma.SelmaUtils.areNull(inCustomerResource)) {
      out = null;
    }
    return out;
  }


  @Override
  public final java.util.List<org.demo.controller.resource.CustomerResource> map(java.util.List<org.demo.entity.Customer> inCustomer) {
    java.util.List<org.demo.controller.resource.CustomerResource> out = null;
    if (inCustomer != null) {
      java.util.ArrayList<org.demo.controller.resource.CustomerResource> aoutTmpCollection = new java.util.ArrayList<org.demo.controller.resource.CustomerResource>(inCustomer.size());
      for (org.demo.entity.Customer aoutItem : inCustomer) {
        aoutTmpCollection.add(map(aoutItem));
      }
      out = aoutTmpCollection;
    }
    return out;
  }



  /**
   * Single constructor
   */
  public CustomerMapperSelmaGeneratedClass() {
  }

}
