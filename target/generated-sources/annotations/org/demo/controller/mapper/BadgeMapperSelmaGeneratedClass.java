// GENERATED BY S3LM4
package org.demo.controller.mapper;


public final class BadgeMapperSelmaGeneratedClass
    implements BadgeMapper {

  @Override
  public final org.demo.controller.resource.BadgeResource map(org.demo.entity.Badge inBadge) {
    org.demo.controller.resource.BadgeResource out = null;
    if (inBadge != null) {
      out = new org.demo.controller.resource.BadgeResource();
      out.setAuthorizationLevel(inBadge.getAuthorizationLevel());
      out.setBadgeNumber(inBadge.getBadgeNumber());
      if (inBadge.getEndOfValidity() != null) {
        out.setEndOfValidity(new java.util.Date(inBadge.getEndOfValidity().getTime()));
      }
      else {
        out.setEndOfValidity(null);
      }
    }
    return out;
  }


  @Override
  public final org.demo.entity.Badge map(org.demo.controller.resource.BadgeResource inBadgeResource) {
    org.demo.entity.Badge out = null;
    if (inBadgeResource != null) {
      out = new org.demo.entity.Badge();
      out.setAuthorizationLevel(inBadgeResource.getAuthorizationLevel());
      out.setBadgeNumber(inBadgeResource.getBadgeNumber());
      if (inBadgeResource.getEndOfValidity() != null) {
        out.setEndOfValidity(new java.util.Date(inBadgeResource.getEndOfValidity().getTime()));
      }
      else {
        out.setEndOfValidity(null);
      }
    }
    return out;
  }


  @Override
  public final org.demo.entity.Badge map(org.demo.controller.resource.BadgeResource inBadgeResource, org.demo.entity.Badge out) {
    if (inBadgeResource != null) {
      if (out == null) {
        out = new org.demo.entity.Badge();
      }
      out.setAuthorizationLevel(inBadgeResource.getAuthorizationLevel());
      out.setBadgeNumber(inBadgeResource.getBadgeNumber());
      if (inBadgeResource.getEndOfValidity() != null) {
        out.setEndOfValidity(new java.util.Date(inBadgeResource.getEndOfValidity().getTime()));
      }
      else {
        out.setEndOfValidity(null);
      }
    }
    if (fr.xebia.extras.selma.SelmaUtils.areNull(inBadgeResource)) {
      out = null;
    }
    return out;
  }


  @Override
  public final java.util.List<org.demo.controller.resource.BadgeResource> map(java.util.List<org.demo.entity.Badge> inBadge) {
    java.util.List<org.demo.controller.resource.BadgeResource> out = null;
    if (inBadge != null) {
      java.util.ArrayList<org.demo.controller.resource.BadgeResource> aoutTmpCollection = new java.util.ArrayList<org.demo.controller.resource.BadgeResource>(inBadge.size());
      for (org.demo.entity.Badge aoutItem : inBadge) {
        aoutTmpCollection.add(map(aoutItem));
      }
      out = aoutTmpCollection;
    }
    return out;
  }



  /**
   * Single constructor
   */
  public BadgeMapperSelmaGeneratedClass() {
  }

}
