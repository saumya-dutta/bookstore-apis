/*
 * Created on 2022-03-14 ( Date ISO 2022-03-14 - Time 18:56:11 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
*/
package org.demo.service;

import org.demo.entity.Publisher;
import org.demo.service.criteria.PublisherCriteria;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

/**
 * Service interface for Publisher.
 * @author Telosys (http://www.telosys.org/) version 3.3.0
 */
public interface PublisherService {

	/**
	 * Perform a pageable and filtered search.
	 * @param pageable pagination configuration
	 * @param criteria filters
	 * @return a page of publisher
	 */
	public Page<Publisher> search(Pageable pageable, PublisherCriteria criteria);
	/**
	 * Recover an publisher following an id.
	 * @param id the given id
	 * @return the publisher
	 */
	public Publisher get(Integer code);

	/**
	 * Perform an publisher deletion.
	 * @param id the given id
	 * @return state of deletion (true if ok otherwise false)
	 */
	public Boolean delete(Integer code);

	/**
	 * Perform an publisher creation.
	 * @param publisher to create
	 * @return created publisher
	 */
	public Publisher create(Publisher publisher);

	/**
	 * Perform an publisher update.
	 * @param publisher to update
	 * @return state of update (true if ok otherwise false)
	 */
	public Boolean save(Publisher publisher);

	/**
	 * Test publisher existence.
	 * @param publisher to check
	 * @return true if author exist otherwise false
	 */
	public Boolean exist(Publisher publisher);
}
