/*
 * Created on 2022-03-14 ( Date ISO 2022-03-14 - Time 18:56:11 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
*/
package org.demo.service;

import javax.persistence.*;

import org.demo.entity.EmployeeGroup;
import org.demo.entity.EmployeeGroupKey;
import org.demo.repository.EmployeeGroupRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

/**
 * Service implementation for EmployeeGroup.
 * @author Telosys (http://www.telosys.org/) version 3.3.0
 */
@Service
public class EmployeeGroupServiceImpl implements EmployeeGroupService {

	@Autowired
	private EmployeeGroupRepository employeeGroupRepository;

	@Override
	public Page<EmployeeGroup> search(Pageable pageable) {
		return employeeGroupRepository.findAll(pageable);
	}

	@Override
	public EmployeeGroup get(String employeeCode, Short groupId) {
		// Build the composite key
		EmployeeGroupKey key = new EmployeeGroupKey(employeeCode, groupId);
		return employeeGroupRepository.findById(key).orElse(null);
	}

	@Override
	public Boolean delete(String employeeCode, Short groupId) {
		// Build the composite key
		EmployeeGroupKey key = new EmployeeGroupKey(employeeCode, groupId);
		if (employeeGroupRepository.findById(key) != null) {
			employeeGroupRepository.deleteById(key);
			return true;
		}
		return false;
	}

	@Override
	public EmployeeGroup create(EmployeeGroup employeeGroup) {
		return employeeGroupRepository.save(employeeGroup);
	}

	@Override
	public Boolean save(EmployeeGroup employeeGroup) {
		// Build the composite key
		EmployeeGroupKey pk = new EmployeeGroupKey(employeeGroup.getEmployeeCode(), employeeGroup.getGroupId());
		if (employeeGroupRepository.findById(pk) != null) {
			employeeGroupRepository.save(employeeGroup);
			return true;
		}
		return false;
	}

	@Override
	public Boolean exist(EmployeeGroup employeeGroup) {
		// Build the composite key
		EmployeeGroupKey pk = new EmployeeGroupKey(employeeGroup.getEmployeeCode(), employeeGroup.getGroupId());
		return employeeGroupRepository.existsById(pk);
	}


}

