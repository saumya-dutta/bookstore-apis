/*
 * Created on 2022-03-14 ( Date ISO 2022-03-14 - Time 18:56:08 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
*/
package org.demo.entity;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.*;

/**
 * Persistent class for Badge entity stored in table BADGE.
 * This class is a "record entity" without JPA links.
 * @author Telosys (http://www.telosys.org/) version 3.3.0
 */
@Entity
@Table(name="BADGE", schema="ROOT" )
public class Badge implements Serializable {

	private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="BADGE_NUMBER", nullable=false)
    private Integer badgeNumber ; 
    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="AUTHORIZATION_LEVEL", nullable=false)
    private Short authorizationLevel ;     @Temporal(TemporalType.DATE)
    @Column(name="END_OF_VALIDITY")
    private Date endOfValidity ; 

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Badge() {
		super();
    }

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
	public void setBadgeNumber(Integer badgeNumber) {
        this.badgeNumber = badgeNumber ;
    }
	public Integer getBadgeNumber() {
        return this.badgeNumber;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
	//--- DATABASE MAPPING : AUTHORIZATION_LEVEL (SMALLINT) 
	public void setAuthorizationLevel(Short authorizationLevel) {this.authorizationLevel = authorizationLevel;}
	public Short getAuthorizationLevel() {return this.authorizationLevel;}

	//--- DATABASE MAPPING : END_OF_VALIDITY (DATE) 
	public void setEndOfValidity(Date endOfValidity) {this.endOfValidity = endOfValidity;}
	public Date getEndOfValidity() {return this.endOfValidity;}


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
 	public String toString() {
		StringBuilder sb = new StringBuilder(); 
		sb.append(badgeNumber); 
		sb.append(authorizationLevel); 
		sb.append("|"); 
		sb.append(endOfValidity); 
        return sb.toString();
    }
}